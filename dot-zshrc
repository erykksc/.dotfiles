#!/usr/bin/env zsh

# Initialize starship if exists
if command -v starship > /dev/null 2>&1; then
  eval "$(starship init zsh)"
fi

# Load secrets
[ -f ~/.secrets ] && source ~/.secrets

alias v='nvim'
alias vc='nvim .'

if command -v '/Users/eryk/.claude/local/claude' > /dev/null 2>&1; then
fi

alias y='yazi'
alias s='~/.dotfiles/scripts/tmux-client.sh'

# GIT ALIASES
alias gs='git status'

alias ls='ls --color=auto'

# Goland tools - use go tools if available, fallback to global commands
golangci-lint() {
  if go tool golangci-lint version >/dev/null 2>&1; then
    go tool golangci-lint "$@"
  else
    command golangci-lint "$@"
  fi
}

goimports() {
  if go tool goimports --help >/dev/null 2>&1; then
    go tool goimports "$@"
  else
    command goimports "$@"
  fi
}

# KEYBINDINGS
bindkey -e
# Move through history with the same prefix
bindkey '^P' history-search-backward
bindkey '^N' history-search-forward

# HISTORY
HISTSIZE=10000
HISTFILE=~/.zsh_history
SAVEHIST=$HISTSIZE
HISTDUP=erase
setopt APPEND_HISTORY
setopt INC_APPEND_HISTORY
setopt SHARE_HISTORY
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_SPACE

setopt EXTENDED_GLOB

# alias function to strip ansi characters
strip_ansi() {
  sed -E "s/\x1B\[[0-9;]*[mK]//g"
}

# FZF
# Set up fzf key bindings and fuzzy completion
if command -v fzf > /dev/null 2>&1; then
  source <(fzf --zsh)
fi
# Setting fd as the default source for fzf
export FZF_DEFAULT_COMMAND='fd --type f --hidden --strip-cwd-prefix'
export FZF_CTRL_T_COMMAND='fd --type f --hidden --strip-cwd-prefix'
export FZF_CTRL_T_OPTS="--bind 'ctrl-d:reload(fd --type d --hidden --strip-cwd-prefix),ctrl-f:reload(eval $FZF_CTRL_T_COMMAND)'"
export FZF_ALT_C_COMMAND="fd --type d --hidden ."

# Enable completions
fpath=(
  /opt/homebrew/share/zsh/site-functions
  /usr/share/zsh/site-functions
  /usr/local/share/zsh/site-functions
  $fpath
)
autoload -Uz compinit
compinit

# Add keybind to edit prompt in the editor
autoload -z edit-command-line
zle -N edit-command-line
bindkey "^X^E" edit-command-line

if command -v direnv > /dev/null 2>&1; then
  eval "$(direnv hook zsh)"
fi

# PLUGINS
ZPLUGINDIR=${XDG_DATA_HOME:-$HOME/.local/share}/zsh-plugins
mkdir -p $ZPLUGINDIR

# zsh-autosuggestions
if [[ ! -d $ZPLUGINDIR/zsh-autosuggestions ]]; then
  git clone https://github.com/zsh-users/zsh-autosuggestions \
    $ZPLUGINDIR/zsh-autosuggestions
fi
source $ZPLUGINDIR/zsh-autosuggestions/zsh-autosuggestions.plugin.zsh

# zsh-syntax-highlighting
if [[ ! -d $ZPLUGINDIR/zsh-syntax-highlighting ]]; then
  git clone https://github.com/zsh-users/zsh-syntax-highlighting \
    $ZPLUGINDIR/zsh-syntax-highlighting
fi
source $ZPLUGINDIR/zsh-syntax-highlighting/zsh-syntax-highlighting.plugin.zsh
